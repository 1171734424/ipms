package com.ideassoft.pmsinhouse.controller;


import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.ideassoft.pmsinhouse.service.HouseStasticService;
import com.ideassoft.core.bean.LoginUser;
import com.ideassoft.util.DateUtil;
import com.ideassoft.util.RequestUtil;

@Transactional
@Controller
public class HouseStatisticCtrl {
	@Autowired
	private HouseStasticService houseStasticService;
	
	
	
	/**
	 * 
	 * @Description 当日房态统计
	 * @author ideas_mengl
	 * @date   2018年5月21日下午3:23:09
	 * @return
	 */
	@RequestMapping("/currentHouse.do")
	public ModelAndView currentHouse(HttpServletRequest request){
		LoginUser loginUser = (LoginUser) request.getSession(true).getAttribute(RequestUtil.LOGIN_USER_SESSION_KEY);		
		ModelAndView mv = new ModelAndView();
		String staffId = loginUser.getStaff().getStaffId();
		String madate = request.getParameter("madate");
		String sql = "queryCurrentHouse";
		List<?> result = houseStasticService.findBySQL(sql,new String []{staffId,staffId,staffId,staffId,staffId,staffId,staffId}, true);
		
		mv.addObject("result", result);
		mv.addObject("madate", madate);
		mv.setViewName("page/ipmshouse/topMenu/houseStatistics/currentStatus");
		//mv.setViewName("page/ipmspage/houseStatistics/currentStatus");
		return mv;
	}
	
	/**
	 * 
	 * @Description 远期房态查询数据展示页面
	 * @author ideas_mengl
	 * @date   2018年5月22日上午11:40:59
	 * @param request
	 * @return
	 */
	@SuppressWarnings("unchecked")
	@RequestMapping("/forwardHouse.do")
	public ModelAndView forwardHouse(HttpServletRequest request){
		LoginUser loginUser = (LoginUser) request.getSession(true).getAttribute(RequestUtil.LOGIN_USER_SESSION_KEY);		
		ModelAndView mv = new ModelAndView();
		boolean flag = true;
		String staffId = loginUser.getStaff().getStaffId();
		String madate = request.getParameter("madate");
		String edate = request.getParameter("edate");
		List<String> timelist = new ArrayList<String>();
		timelist.add(madate);
		List<Object> result = null;
		List<String> timeParamList = new ArrayList<String>();
		Map<String, List<Object>> listinfo = new HashMap<String, List<Object>>();
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(DateUtil.s2d(madate, "yy/MM/dd"));
		
		Calendar calendar2 = Calendar.getInstance();
		calendar2.setTime(DateUtil.s2d(edate, "yy/MM/dd"));
			while(flag){
				calendar.add(Calendar.DATE, 1);
				timelist.add(DateUtil.d2s(calendar.getTime(), "yyyy/MM/dd"));
				if(calendar.compareTo(calendar2) == 0){
					
                     flag = false;
				}
			}
			
		 
		
		Map<String,List<String>> map = new HashMap<String,List<String>>();
		for(String timeParam : timelist){
			String str =" select r6.*,(r6.zg - r6.weiXiu - r6.tingShou) keShou2,(r6.zg - r6.zaiZhu - r6.tingshou - r6.weiXiu - r6.yuDing) keShou,round((r6.zaiZhu / r6.zg) * 100, 2) || '%' rzrate, round(((r6.zaiZhu + r6.yuDing) / r6.zg) * 100, 2) || '%' czrate "+
		                "from (select * from (select nvl(count(o.order_id), '0') zaiZhu from TB_P_ORDER o  where to_char(o.arrival_time, 'yyyy/MM/dd') <=  '"
		                +timeParam+"' and to_char(o.leave_time, 'yyyy/MM/dd') >   '"
		                +timeParam+"'   and o.status = '3' and o.theme = '3' and o.branch_id in (select t.house_id from TB_P_HOUSE t, TB_C_HOUSEACCOUNT hacc where t.staff_id = hacc.houseaccount_name  and t.status <> '0' and hacc.staff_id like '%' || '"+staffId
					    +"' || '%'  and hacc.status = '1')) rr1, "
		                +"(select count(p.log_id) tingShou from tb_p_haltplan p where p.halt_type = '1' and to_char(p.start_time, 'yyyy/MM/dd') <=   '"+timeParam+"'  and to_char(p.end_time, 'yyyy/MM/dd') >   '"+timeParam+"'  and p.status in ('1', '3') and p.branch_id in (select t2.house_id from TB_P_HOUSE t2, TB_C_HOUSEACCOUNT hacc where t2.staff_id = hacc.houseaccount_name and t2.status <> '0' and hacc.staff_id like '%' ||  '"+staffId+"' || '%' and hacc.status = '1')) rr2,"
					    +"(select count(rp.branch_id) weiXiu from tb_p_repairapply rp where rp.status in ('2', '3') and to_char(rp.application_date, 'yyyy/MM/dd') <= '"+timeParam+"' and rp.branch_id in (select t3.house_id from TB_P_HOUSE t3, TB_C_HOUSEACCOUNT hacc where t3.staff_id = hacc.houseaccount_name and t3.status <> '0' and hacc.staff_id like '%' ||  '"+staffId+"' || '%' and hacc.status = '1')) r3, "
					    +"(select count(od.order_id) yuDing from TB_P_ORDER od where od.theme = '3' and to_char(od.arrival_time, 'yyyy/MM/dd') <=   '"+timeParam+"'  and to_char(od.leave_time, 'yyyy/MM/dd') >   '"+timeParam+"'  and od.status in ('1', '2') and od.branch_id in (select t4.house_id from TB_P_HOUSE t4, TB_C_HOUSEACCOUNT hacc where t4.staff_id = hacc.houseaccount_name and t4.status <> '0' and hacc.staff_id like '%' || '"+staffId+"' || '%' and hacc.status = '1')) r4,"
					    +"(select count(h7.house_id) zg from tb_p_house h7, TB_C_HOUSEACCOUNT hacc where h7.staff_id = hacc.houseaccount_name and h7.status <> '0' and hacc.staff_id like '%' || '"+staffId+"' || '%' and hacc.status = '1') r5) r6";
//			 result = hSService.findBySQL("findforwdHStatus",new String[] {timeParam,timeParam
//					,staffId,timeParam,timeParam,staffId,timeParam,staffId,timeParam,timeParam,staffId,staffId
//					}, true);
			 
			 result = houseStasticService.findBySQL(str);
			 listinfo.put(timeParam,  result);
			 timeParamList.add(timeParam);
			 
		}

		mv.addObject("listinfo", JSONObject.fromObject(listinfo));
		mv.addObject("timeParamList", timeParamList);
		mv.setViewName("page/ipmshouse/topMenu/houseStatistics/forwardHouse");
		return mv;
	}
}
