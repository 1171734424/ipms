<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	      http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd"
	xmlns:context="http://www.springframework.org/schema/context">

	<bean id="dsOracle" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- <bean id="dsSqlServer" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="${jdbc.sqlserver.url}" />
		<property name="username" value="${jdbc.sqlserver.username}" />
		<property name="password" value="${jdbc.sqlserver.password}" />
	</bean>
	
	<bean id="dsMySql" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${jdbc.mysql.url}" />
		<property name="username" value="${jdbc.mysql.username}" />
		<property name="password" value="${jdbc.mysql.password}" />
	</bean> 
	
	<bean id="dsAccess" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton" destroy-method="close">
		<property name="driverClassName" value="sun.jdbc.odbc.JdbcOdbcDriver" />
		<property name="url" value="${jdbc.access.url}" />
	</bean> -->

	<bean id="dynamicDataSource" class="com.ideassoft.core.jdbc.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="dsOracle" key="dsOracle"></entry>
				<!-- <entry value-ref="dsSqlServer" key="dsSqlServer"></entry>
				<entry value-ref="dsMySql" key="dsMySql"></entry> -->
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dsOracle">
		</property>
	</bean>
	
	<bean id="dynamicDataSourceAspect" class="com.ideassoft.core.jdbc.datasource.DynamicDataSourceAspect"/>
 	
 	<aop:config>
		<aop:aspect ref="dynamicDataSourceAspect">
			<aop:pointcut expression="execution(public * com.ideassoft.service..*.*(..))" id="servPC"/>
			<aop:pointcut expression="target(com.ideassoft.core.page.PageBuilder)" id="pagePC"/>
			<aop:before pointcut-ref="servPC" method="setDynamicDataSource"/>
			<aop:before pointcut-ref="pagePC" method="setDynamicDataSource"/>
		</aop:aspect>
	</aop:config>
	
	<bean id="placeholderProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/db.properties</value>
			</list>
		</property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="order" value="1" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dynamicDataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
			</props>
		</property>
		<!--<property name="mappingLocations">
			<list>
				<value>classpath:com/ideassoft/bean/*.hbm.xml</value>
			</list>
		</property>-->
		<property name="packagesToScan"> 
			<list>
				<value>com.ideassoft.bean</value>
			</list> 
		</property> 
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="cacheQueries" value="true" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>
	
	<bean id="namedJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
		<constructor-arg ref="dynamicDataSource"/>  
	</bean>

	<!-- Hibernate事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 用注解来实现事务管理 -->
	<tx:annotation-driven proxy-target-class="true" />
	
</beans>

